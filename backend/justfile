####################################################################################################
# Settings/config
####################################################################################################

# Load a .env file if present
set dotenv-load := true

####################################################################################################
# Dev DB container/volume
#
# Requires the Docker CLI and a running VM such as Docker Desktop or Colima.
####################################################################################################

docker-project := "spur"
docker-volume := "postgres_data"
docker-container := "spur_dev"

# Start the dev DB container (also the default recipe)
db-start:
	docker start {{docker-container}}

# Stop the dev DB container
db-stop:
	docker stop {{docker-container}}

# Initialize the dev DB container and volume
db-up:
	docker compose -p {{docker-project}} up -d

# Remove the container and named Docker volume (persistent dev data)
[confirm("Are you sure you want to remove the dev DB and all of its data?")]
db-rm: db-stop
	docker rm {{docker-container}}
	docker volume rm {{docker-project}}_{{docker-volume}}

####################################################################################################
# Migrations
#
# Requires the Atlas CLI (https://atlasgo.io/getting-started#installation).
# Recipes that use an ephemeral DB require the VM for Docker to be running.
# Recipes that use the dev DB URL require the dev DB container to be running.
####################################################################################################

# A URL to pass to Atlas so that it can create an ephemeral DB to work in
ephemeral-pg := "docker://postgres/17/dev"

# The master schema to be edited by hand and diffed by Atlas
schema-file := "file://schema.sql"

# Recompute `atlas.sum` after manual changes
mg-hash:
	atlas migrate hash

# Validate all migrations
mg-validate:
	atlas migrate validate --dev-url {{ephemeral-pg}}

# Generate a new migration file by diffing the schema
migration name:
	atlas migrate diff {{name}} --to {{schema-file}} --dev-url {{ephemeral-pg}}

# Preview new migrations to be run
mg-preview: mg-validate
	atlas migrate status --url $DATABASE_URL
	atlas migrate apply --dry-run --url $DATABASE_URL

# Run pending migrations
[confirm("Are you sure you want to apply all pending migrations?")]
migrate: mg-validate
	atlas migrate apply --url $DATABASE_URL

####################################################################################################
# Miscellaneous
####################################################################################################

# Seed the database with dummy data
[confirm("Are you sure you want to insert the seed data into the database?")]
seed:
	cargo run --bin seed

# Test coverage (requires `cargo install cargo-llvm-cov`)
coverage:
	cargo llvm-cov --open

